version: "3"
services:
  db:
    image: mongo:4.4
    restart: always
    # allow the mongo to run on single node replica set to allow change streams
    command: mongod --replSet my-mongo-set
    ports:
      - 27017:27017

  # do not touch this container, it is used to initialize the replica set and then it will exit
  # hours spent on this script: 89964123456 hours
  mongoinit:
    image: mongo:4.4
    restart: "no"
    depends_on:
      - db
    command: >
      bash -c "
        until mongo --host db:27017 --eval 'db.adminCommand(\"ping\")'; do
          sleep 1
          echo 'waiting for mongodb...'
        done
        mongo --host db:27017 <<-'EOF'
        db = (new Mongo(\"db:27017\")).getDB(\"test\");
        config = {
        \"_id\" : \"my-mongo-set\",
        \"members\" : [
          {
            \"_id\" : 0,
            \"host\" : \"db:27017\"
          }
        ]
        };
        rs.initiate(config);
        while (rs.status().hasOwnProperty(\"myState\") && rs.status().myState != 1) {
          print(\"Waiting for primary...\");
          sleep(1000);
        }
        sleep(5000);
        // Seeding data
        db.products.insertMany([
          { \"name\": \"Johnaa\", \"price\": 30, \"imgUrl\": \"New York\", \"description\": \"New York\" },
          { \"name\": \"Johnaga\", \"price\": 50, \"imgUrl\": \"New York\", \"description\": \"Newg York\" }
        ]);
        EOF
      "

  server:
    build: ./server
    restart: always
    ports:
      - 8080:8080
      - 8081:8081
    depends_on:
      - db
    environment:
      - MONGO_URI=mongodb://db:27017/?directConnection=true

  client:
    build: ./client
    restart: always
    ports:
      - 3000:3000
    depends_on:
      - server
